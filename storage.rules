rules_version = '2';

// Firebase Storage Security Rules
service firebase.storage {
  match /b/{bucket}/o {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Helper function to validate image file
    function isValidImage() {
      return request.resource.size < 5 * 1024 * 1024 // 5MB max
        && request.resource.contentType.matches('image/(jpeg|jpg|png|gif|webp)');
    }

    // Helper function to validate file size for larger files
    function isValidFileSize(maxSizeMB) {
      return request.resource.size < maxSizeMB * 1024 * 1024;
    }
    
    // Profile pictures
    match /profile-pictures/{userId}/{fileName} {
      // Allow read access to all authenticated users
      allow read: if isAuthenticated();
      
      // Allow write (upload/update/delete) only to the owner
      allow write: if isOwner(userId) && isValidImage();
      
      // Allow delete only to the owner
      allow delete: if isOwner(userId);
    }
    
    // Legacy profile pictures path (for backward compatibility)
    match /users/{userId}/profile/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && isValidImage();
      allow delete: if isOwner(userId);
    }
    
    // Group images
    match /group-images/{userId}/{fileName} {
      // Allow read access to all authenticated users
      allow read: if isAuthenticated();

      // Allow write to authenticated users with valid images
      // Uploaded by the user creating/updating the group
      allow write: if isAuthenticated() && isValidImage();

      // Allow delete to the uploader
      allow delete: if isOwner(userId);
    }
    
    // Session attachments (if needed in future)
    match /session-attachments/{userId}/{sessionId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && isValidFileSize(10); // 10MB max
      allow delete: if isOwner(userId);
    }

    // Session images - restrict based on session visibility
    match /session-images/{userId}/{fileName} {
      // Allow authenticated users to read session images
      // Note: Session visibility is enforced at the Firestore level
      // If you have the session image URL, you can access it if authenticated
      allow read: if isAuthenticated();

      // Allow write only to the owner with valid image and size constraints
      allow write: if isOwner(userId) && isValidImage();

      // Allow delete only to the owner
      allow delete: if isOwner(userId);
    }

    // Deny all other paths by default
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
