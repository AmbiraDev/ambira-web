rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow public read access for profile visibility (with fallback)
      allow read: if request.auth != null && 
        (resource.data.profileVisibility == 'everyone' || 
         !('profileVisibility' in resource.data));
      // Allow followers to read if profile is set to followers
      allow read: if request.auth != null && 
        resource.data.profileVisibility == 'followers' && 
        exists(/databases/$(database)/documents/follows/$(request.auth.uid + '_' + userId));
    }
    
    // Follow relationships
    match /follows/{followId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == followId.split('_')[0] || request.auth.uid == followId.split('_')[1]);
    }
    
    // User activities
    match /activities/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow followers to read activities if visibility allows (with fallback)
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(userId)) &&
        (get(/databases/$(database)/documents/users/$(userId)).data.activityVisibility == 'followers' ||
         !('activityVisibility' in get(/databases/$(database)/documents/users/$(userId)).data)) &&
        exists(/databases/$(database)/documents/follows/$(request.auth.uid + '_' + userId));
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(userId)) &&
        (get(/databases/$(database)/documents/users/$(userId)).data.activityVisibility == 'everyone' ||
         !('activityVisibility' in get(/databases/$(database)/documents/users/$(userId)).data));
    }
    
    // User activities subcollections (daily, weekly, etc.)
    match /activities/{userId}/{subcollection} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow followers to read activities if visibility allows (with fallback)
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(userId)) &&
        (get(/databases/$(database)/documents/users/$(userId)).data.activityVisibility == 'followers' ||
         !('activityVisibility' in get(/databases/$(database)/documents/users/$(userId)).data)) &&
        exists(/databases/$(database)/documents/follows/$(request.auth.uid + '_' + userId));
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(userId)) &&
        (get(/databases/$(database)/documents/users/$(userId)).data.activityVisibility == 'everyone' ||
         !('activityVisibility' in get(/databases/$(database)/documents/users/$(userId)).data));
    }
    
    // User projects - using subcollection structure
    match /projects/{userId}/userProjects/{projectId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow followers to read projects if visibility allows (with fallback)
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(userId)) &&
        (get(/databases/$(database)/documents/users/$(userId)).data.projectVisibility == 'followers' ||
         !('projectVisibility' in get(/databases/$(database)/documents/users/$(userId)).data)) &&
        exists(/databases/$(database)/documents/follows/$(request.auth.uid + '_' + userId));
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(userId)) &&
        (get(/databases/$(database)/documents/users/$(userId)).data.projectVisibility == 'everyone' ||
         !('projectVisibility' in get(/databases/$(database)/documents/users/$(userId)).data));
    }
    
    // User project tasks - subcollection of projects
    match /projects/{userId}/userProjects/{projectId}/tasks/{taskId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow followers to read tasks if project visibility allows (with fallback)
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(userId)) &&
        (get(/databases/$(database)/documents/users/$(userId)).data.projectVisibility == 'followers' ||
         !('projectVisibility' in get(/databases/$(database)/documents/users/$(userId)).data)) &&
        exists(/databases/$(database)/documents/follows/$(request.auth.uid + '_' + userId));
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(userId)) &&
        (get(/databases/$(database)/documents/users/$(userId)).data.projectVisibility == 'everyone' ||
         !('projectVisibility' in get(/databases/$(database)/documents/users/$(userId)).data));
    }
    
    // Sessions
    match /sessions/{sessionId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    // Groups
    match /groups/{groupId} {
      allow read: if resource.data.privacySetting == 'public';
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.memberIds;
    }
    
    // Allow authenticated users to query users collection for discovery
    match /users/{userId} {
      allow list: if request.auth != null;
    }
  }
}
